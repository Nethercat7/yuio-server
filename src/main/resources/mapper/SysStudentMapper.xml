<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zfy.yuio.dao.SysStudentDao">
    <insert id="add" parameterType="SysStudent">
        INSERT INTO sys_student(student_id,student_name,student_code,student_gender,student_phone,student_status,student_grade,
        student_remark,student_class_id,student_pwd,student_salt)
        VALUES (#{studentId},#{studentName},#{studentCode},#{studentGender},#{studentPhone},#{studentStatus},#{studentGrade},
        #{studentRemark},#{studentClassId},#{studentPwd},#{studentSalt})
    </insert>

    <select id="get" parameterType="QueryParams" resultType="SysStudent">
        SELECT
        s.student_id,s.student_name,s.student_code,s.student_gender,s.student_phone,s.student_status,s.student_grade,s.student_remark,
        s.student_class_id,s.student_create_time,
        c.college_name,c.college_id,
        m.major_name,m.major_id,
        cls.class_name,
        ei.empl_status,ei.empl_company,ei.empl_protocol,ei.empl_plan,ei.empl_city_id,ei.empl_work_id,ei.empl_protocol_file,
        city.city_name AS empl_city_name,
        w.work_name AS empl_work_name
        FROM sys_student s
        LEFT JOIN sys_class cls
        ON s.student_class_id=cls.class_id
        LEFT JOIN sys_major m
        ON cls.class_major_id=m.major_id
        LEFT JOIN sys_college c
        ON m.major_college_id=c.college_id
        LEFT JOIN write_empl_info ei
        ON ei.empl_student_code=s.student_code
        LEFT JOIN sys_city city
        ON ei.empl_city_id=city.city_id
        LEFT JOIN sys_work w
        ON ei.empl_work_id=w.work_id
        WHERE 1=1
        <if test="studentId!=null">
            AND s.student_id=#{studentId}
        </if>
        <if test="orgId!=null">
            AND (
            cls.class_id=#{orgId}
            OR m.major_id=#{orgId}
            OR c.college_id=#{orgId}
            )
        </if>
        <if test="name!=null">
            AND s.student_name LIKE concat('%',#{name},'%')
        </if>
        <if test="grade!=0">
            AND cls.class_grade=#{grade}
        </if>
        <if test="emplStatus!=null">
            AND ei.empl_status=#{emplStatus}
        </if>
        <if test="emplWrite==0">
            AND ei.empl_status IS NULL
        </if>
        <if test="emplWrite==1">
            AND ei.empl_status IS NOT NULL
        </if>
    </select>

    <delete id="del" parameterType="Long">
        DELETE FROM sys_student
        WHERE student_id=#{id}
    </delete>

    <update id="upd" parameterType="SysStudent">
        UPDATE sys_student
        SET student_name=#{studentName},student_code=#{studentCode},student_gender=#{studentGender},student_phone=#{studentPhone},
        student_status=#{studentStatus},student_grade=#{studentGrade},student_remark=#{studentRemark},student_class_id=#{studentClassId}
        WHERE student_id=#{studentId}
    </update>

    <select id="getById" parameterType="Long" resultType="SysStudent">
        SELECT
        s.student_id,s.student_name,s.student_code,s.student_gender,s.student_phone,s.student_status,s.student_grade,s.student_remark,
        s.student_class_id,s.student_create_time,
        c.college_name,c.college_id,
        m.major_name,m.major_id,
        cls.class_name,
        ei.empl_status,ei.empl_company,ei.empl_protocol,ei.empl_plan,ei.empl_city_id,ei.empl_work_id,
        city.city_name AS empl_city_name,
        w.work_name AS empl_work_name
        FROM sys_student s
        LEFT JOIN sys_class cls
        ON s.student_class_id=cls.class_id
        LEFT JOIN sys_major m
        ON cls.class_major_id=m.major_id
        LEFT JOIN sys_college c
        ON m.major_college_id=c.college_id
        LEFT JOIN write_empl_info ei
        ON ei.empl_student_code=s.student_code
        LEFT JOIN sys_city city
        ON ei.empl_city_id=city.city_id
        LEFT JOIN sys_work w
        ON ei.empl_work_id=w.work_id
        WHERE s.student_id=#{id}
    </select>

    <insert id="addRole" parameterType="Long">
        INSERT INTO sys_student_role(sr_student_id,sr_role_id)
        VALUES(#{studentId},#{roleId})
    </insert>

    <update id="updProfile" parameterType="SysStudent">
        UPDATE sys_student
        SET student_gender=#{studentGender},student_phone=#{studentPhone}
        WHERE student_id=#{studentId}
    </update>

    <select id="getPwdInfo" parameterType="Long" resultType="SysStudent">
        SELECT student_pwd,student_salt
        FROM sys_student
        WHERE student_id=#{id}
    </select>

    <insert id="addFromExcel" parameterType="ExcelStudent">
        INSERT INTO sys_student(student_id,student_name,student_code,student_gender,student_phone,student_status,student_grade,student_remark,student_class_id,student_pwd,student_salt)
        VALUES
            <foreach collection="params" item="s" separator=",">
                (#{s.studentId},#{s.studentName},#{s.studentCode},#{s.studentGender},#{s.studentPhone},#{s.studentStatus},#{s.studentGrade},#{s.studentRemark},#{s.studentClassId},#{s.studentPwd},#{s.studentSalt})
            </foreach>
        </insert>

    <select id="verify" parameterType="String" resultType="Long">
        SELECT student_id
        FROM sys_student
        WHERE student_code=#{key}
        OR student_phone=#{key}
    </select>

    <insert id="addTutor" parameterType="String">
        INSERT INTO sys_student_teacher(st_teacher_code,st_student_code)
        VALUES
        <foreach collection="teacherCode" item="item">
            (#{item},#{studentCode})
        </foreach>
    </insert>
</mapper>